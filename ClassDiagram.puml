@startuml

package "cl.ucn.disc.dsm.news" {

    package "model" #c1f77f {

        Class News <<Entity>>{

            - id: Long
            - title: String
            - source: String
            - author: String
            - url: String
            - urlImage: String
            - description: String
            - content: String
            - PublishedAt: ZonedDateTime

            + News(..)
            + getId(): String
            + getTitle(): String
            + getSource(): String
            + getAuthor(): String
            + getUrl(): String
            + getUrlImage(): String
            + getDescription(): String
            + getContent(): String
            + getPublishedAt(): ZonedDateTime
        }

        Interface NewsDao {

            + insertNews(news: News): Long
            + wipeData(): void
        }

        package "newsjson" #abffe3 {

            Class JsonDataLinks {

                - first: String
                - last: String
                - prev: String
                - next: String

                + getFirst(): String
                + setFirst(first: String): String
                + getLast(): String
                + setLast(last: String): String
                + getPrev(): String
                + setPrev(Prev: String): String
                + getNext(): String
                + setNext(Next: String): String
            }

            Class JsonMetaLinks {

                - url: String
                - label: String
                - active: boolean

                + getUrl(): String
                + setUrl(first: String): String
                + getLabel(): String
                + setLabel(label: String): String
                + getActive(): String
                + setActive(active: boolean): boolean
            }

            Class JsonNewsAttributes {

                - id: Long
                - title: String
                - source: String
                - author: String
                - url: String
                - urlImage: String
                - description: String
                - content: String
                - Published_at: String

                + getId(): String
                + setId(first: String): String
                + getTitle(): String
                + setTitle(label: String): String
                + getSource(): String
                + setSource(first: String): String
                + getAuthor(): String
                + setAuthor(label: String): String
                + getUrl(): String
                + setUrl(first: String): String
                + getUrlImage(): String
                + setUrlImage(label: String): String
                + getDescription(): String
                + setDescription(first: String): String
                + getContent(): String
                + setContent(label: String): String
                + getPublished_at(): String
                + setPublished_at(first: String): String
            }

            Class JsonNewsData {

            }
            Class JsonNewsItem {

            }

            Class JsonNewsLinks {

            }

            Class JsonNewsPagination {

            }
        }
    }

    package "adapters" #7dacff {

        Class NewsItem {

            - FORMATTER: DateTimeFormatter

            + NewsItem(news: news)
            + getViewHolder(view: View): ViewHolder
            + getType(): int
            + getLayoutRes(): int
            + bindView(holder: ViewHolder, payloads: List<Object>): void
        }
    }

    package "activities" #F7C56D {

        Class MainActivity {

            + onCreate(savedInstance: Bundle): void
            + onRefresh(): void
            + onCreateOptionsMenu(menu: Menu): boolean
            + onOptionsItemSelected(item: MenuItem): boolean
        }
    }

    package "services" #daabfa {

        Interface Contracts {

            + retrieveNews(size: Integer): List<News>
            + saveNews(news: News): void
        }

        Class ContractsImplFaker {

            - theNews: List<News>
            + ContractsImplFaker()
        }

        Class AppDatabase {

           + getInstance(context: Context): AppDatabase
           + newsDao(): NewsDao
        }
    }

    package "utils" #c1f6fc {

        Class Validation {

            + notNull(o: Object, message: String): void
            + minSize(value: String, minSize: int, message: String): void
        }

        Class Converters {

            + toDate(dateString: String): ZonedDateTime
            + toDateString(date: ZonedDateTime): String
        }
    }
}

package "externals" #fcc1ea {

    package "com.github.javafaker" #fcc1ea {

        Class Faker {
           ...
        }
    }

    package "org.slf4j" #fcc1ea {

        Class Logger {
           ...
        }
    }

    package "org.threeten.bp" #fcc1ea {

        Class ZonedDateTime {
           ...
        }
    }

    package "net.openhft.hashing" #fcc1ea {

       Class LongHashFunction {
           ...
       }
    }

    package "android.room." #fcc1ea {

       Class Room {
           ...
       }
    }
}

ContractsImplFaker ..|> Contracts
Contracts ..>  News : <<use>>
ContractsImplFaker ..> Faker : <<use>>
News *--> ZonedDateTime : -PublishedAt
ContractsImplFaker *--> Logger : -log
News ..> Validation
News ..> Converters
News ..> LongHashFunction : <<use>>
News *--> Room : <<use>>
AppDatabase *--> NewsDao : <<use>>
AppDatabase ..> Converters : <<use>>

@enduml